apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.ErieCanal.manager.name }}
  namespace: {{ include "ErieCanal.namespace" . }}
  labels:
    {{- include "ErieCanal.manager.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ErieCanal.manager.replicaCount }}
  selector:
    matchLabels:
      {{- include "ErieCanal.manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ErieCanal.manager.labels" . | nindent 8 }}
        {{- include "ErieCanal.manager.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: init
        image: {{ include "ErieCanal.toolbox.image" . }}
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          tar -C /repo -zxvf /scripts.tar.gz
          kubectl apply -f /crds

          kubectl get cluster local --ignore-not-found=false
          if [ $? -eq 0 ];
          then
              echo "Cluster local exists, ignore creating ..."
          else
              echo "Cluster local doesn't exist, will create it ..."
              kubectl apply -f /manifests/cluster_local.yaml --validate='false'
          fi

          kubectl get pf default-proxyprofile --ignore-not-found=false
          if [ $? -eq 0 ];
          then
              echo "ProxyProfile default-proxyprofile exists, ignore creating ..."
          else
              echo "ProxyProfile default-proxyprofile doesn't exist, will create it ..."
              kubectl apply -f /manifests/default_proxyprofile.yaml --validate='false'
          fi
        volumeMounts:
        - mountPath: /scripts.tar.gz
          name: {{ .Values.ErieCanal.configmaps.repoInit.name }}
          subPath: scripts.tar.gz
        - mountPath: /crds
          name: {{ .Values.ErieCanal.configmaps.crds.name }}
        - mountPath: /repo
          name: shared-repo
        - mountPath: /manifests
          name: {{ .Values.ErieCanal.configmaps.manifests.name }}
      containers:
      - name: manager
        image: {{ include "ErieCanal.manager.image" . }}
        imagePullPolicy: {{ .Values.ErieCanal.image.pullPolicy }}
        ports:
        - name: webhook
          containerPort: {{ .Values.ErieCanal.services.webhook.containerPort }}
        - name: health
          containerPort: 8081
        command:
        - /manager
        args:
        - --v={{ .Values.ErieCanal.logLevel }}
        - --config={{ .Values.ErieCanal.configmaps.manager.filename }}
        env:
          {{- include "ErieCanal.common-env" . | nindent 10 }}
        resources:
          {{- toYaml .Values.ErieCanal.manager.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 1
          timeoutSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: {{ .Values.ErieCanal.configmaps.manager.name }}
          mountPath: {{ printf "/%s" .Values.ErieCanal.configmaps.manager.filename }}
          subPath: {{ .Values.ErieCanal.configmaps.manager.filename }}
        - mountPath: /repo
          name: shared-repo
      volumes:
      - configMap:
          name: {{ .Values.ErieCanal.configmaps.manager.name }}
        name: {{ .Values.ErieCanal.configmaps.manager.name }}
      - configMap:
          name: {{ .Values.ErieCanal.configmaps.repoInit.name }}
        name: {{ .Values.ErieCanal.configmaps.repoInit.name }}
      - configMap:
          name: {{ .Values.ErieCanal.configmaps.crds.name }}
        name: {{ .Values.ErieCanal.configmaps.crds.name }}
      - configMap:
          name: {{ .Values.ErieCanal.configmaps.manifests.name }}
        name: {{ .Values.ErieCanal.configmaps.manifests.name }}
      - emptyDir: {}
        name: shared-repo
      priorityClassName: system-node-critical
      terminationGracePeriodSeconds: 30
      serviceAccountName: {{ include "ErieCanal.serviceAccountName" . }}
      {{- with .Values.ErieCanal.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ErieCanal.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.ErieCanal.affinity.enabled }}
      affinity:
        {{- with .Values.ErieCanal.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: flomesh.io/app
                  operator: In
                  values:
                  - {{ .Values.ErieCanal.manager.name }}
              topologyKey: kubernetes.io/hostname
            weight: 100
      {{- end }}
      {{- with .Values.ErieCanal.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}