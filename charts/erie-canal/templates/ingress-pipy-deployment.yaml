{{- if and .Values.ec.ingress.enabled (semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion) }}
{{- if and (not .Values.ec.ingress.namespaced) (or .Values.ec.ingress.http.enabled .Values.ec.ingress.tls.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.ec.ingress.name }}
  namespace: {{ include "ec.namespace" . }}
  labels:
    {{- include "ec.ingress-pipy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ec.ingress.replicaCount }}
  selector:
    matchLabels:
      {{- include "ec.ingress-pipy.selectorLabels" . | nindent 6 }}
      ingress.flomesh.io/namespaced: {{ .Values.ec.ingress.namespaced | quote }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.ec.ingress.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ec.ingress-pipy.labels" . | nindent 8 }}
        {{- include "ec.ingress-pipy.selectorLabels" . | nindent 8 }}
        ingress.flomesh.io/namespaced: {{ .Values.ec.ingress.namespaced | quote }}
        {{- with .Values.ec.ingress.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      initContainers:
      - name: wait-manager
        image: {{ include "ec.curl.image" . }}
        imagePullPolicy: IfNotPresent
        {{- with .Values.ec.ingress.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        command:
          - curl
          - {{ printf "http://%s:8081/healthz" (include "ec.manager.host" .) }}
          - --connect-timeout
          - "2"
          - --retry
          - "50"
          - --retry-connrefused
          - --retry-delay
          - "5"
      containers:
      - name: ingress
        image: {{ include "ec.ingress-pipy.image" . }}
        imagePullPolicy: {{ .Values.ec.image.pullPolicy }}
        ports:
        {{- if and .Values.ec.ingress.http.enabled (and (not (empty .Values.ec.ingress.http.port)) (not (empty .Values.ec.ingress.http.containerPort))) }}
        - name: http
          containerPort: {{ .Values.ec.ingress.http.containerPort }}
        {{- end }}
        {{- if and .Values.ec.ingress.tls.enabled (and (not (empty .Values.ec.ingress.tls.port)) (not (empty .Values.ec.ingress.tls.containerPort))) }}
        - name: https
          containerPort: {{ .Values.ec.ingress.tls.containerPort }}
        {{- end }}
        - name: health
          containerPort: 8081
        args:
        - --v={{ .Values.ec.logLevel }}
        resources:
          {{- toYaml .Values.ec.ingress.resources | nindent 10 }}
        env:
        {{- include "ec.common-env" . | nindent 8 }}
        {{- with .Values.ec.ingress.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.ec.ingress.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        livenessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          tcpSocket:
            port: {{ include "ec.ingress-pipy.heath.port" . }}
        readinessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          tcpSocket:
            port: {{ include "ec.ingress-pipy.heath.port" . }}
      terminationGracePeriodSeconds: 60
      {{- with .Values.ec.ingress.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ec.serviceAccountName" . }}
      {{- with .Values.ec.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ec.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.ec.affinity.enabled }}
      affinity:
        {{- with .Values.ec.affinity.nodeAffinity }}
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: flomesh.io/app
                  operator: In
                  values:
                  - {{ .Values.ec.ingress.name }}
              topologyKey: kubernetes.io/hostname
            weight: 100
      {{- end }}
      {{- with .Values.ec.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}