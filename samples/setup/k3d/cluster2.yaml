# k3d configuration file, saved as e.g. /home/me/myk3dcluster.yaml
apiVersion: k3d.io/v1alpha4 # this will change in the future as we make everything more stable
kind: Simple # internally, we also have a Cluster config, which is not yet available externally
metadata:
  name: cluster2 # name that you want to give to your cluster (will still be prefixed with `k3d-`)
servers: 1 # same as `--servers 1`
agents: 0 # same as `--agents 0`
kubeAPI: # same as `--api-port demo.flomesh.internal:6445` (where the name would resolve to 127.0.0.1)
  host: "demo.flomesh.internal" # important for the `server` setting in the kubeconfig
  hostIP: "0.0.0.0" # where the Kubernetes API will be listening on
  hostPort: "6447" # where the Kubernetes API listening port will be mapped to on your host system
image: rancher/k3s:v1.21.11-k3s1 # same as `--image rancher/k3s:v1.21.11-k3s1`
network: erie-canal-net # same as `--network erie-canal-net`
ports:
- port: 8092:80 # same as `--port '8092:80@loadbalancer'`
  nodeFilters:
  - loadbalancer
hostAliases: # /etc/hosts style entries to be injected into /etc/hosts in the node containers and in the NodeHosts section in CoreDNS
- ip: 10.0.1.21
  hostnames:
  - demo.flomesh.internal
options:
  k3d: # k3d runtime settings
    wait: true # wait for cluster to be usable before returining; same as `--wait` (default: true)
    timeout: "60s" # wait timeout before aborting; same as `--timeout 60s`
    disableLoadbalancer: false # same as `--no-lb`
    disableImageVolume: false # same as `--no-image-volume`
    disableRollback: false # same as `--no-Rollback`
    loadbalancer:
      configOverrides:
      - settings.workerConnections=2048
  k3s: # options passed on to K3s itself
    extraArgs: # additional arguments passed to the `k3s server|agent` command; same as `--k3s-arg`
    - arg: --no-deploy=traefik
      nodeFilters:
      - server:*
      - agent:*
    - arg: --tls-san=demo.flomesh.internal
      nodeFilters:
      - server:*
  kubeconfig:
    updateDefaultKubeconfig: true # add new cluster to your default Kubeconfig; same as `--kubeconfig-update-default` (default: true)
    switchCurrentContext: true # also set current-context to the new cluster's context; same as `--kubeconfig-switch-context` (default: true)
